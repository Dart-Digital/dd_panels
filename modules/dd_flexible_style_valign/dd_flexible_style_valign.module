<?php

/**
 * Implements hook_dd_flexible_style_settings_form_alter().
 */
function dd_flexible_style_valign_dd_flexible_style_settings_form_alter(&$form, &$form_state, $details, $style_settings) {
  $type = $details['type'];

  $breakpoints = dd_panels_dd_flexible_style_get_breakpoints();
  $inherit = $form['breakpoints']['#inherit'];
  $align_options = array(
    'none' => '-None-',
    'top' => 'Top',
    'center' => 'Center',
    'bottom' => 'Bottom',
  );

  if ($type == 'column' || $type == 'pane') {
    foreach ($breakpoints as $size => $breakpoint) {
      $form['breakpoints'][$size]['valign'] = array(
        '#type' => 'select',
        '#title' => t('Vertical Align'),
        '#options' => $inherit[$size] + $align_options,
      );

      if (!empty($style_settings[$size]['valign'])) {
        $form['breakpoints'][$size]['valign']['#default_value'] = $style_settings[$size]['valign'];
      }
    }
  }
}

/**
 * Implements hook_dd_flexible_style_attributes_alter().
 */
function dd_flexible_style_valign_dd_flexible_style_attributes_alter(&$attributes, $settings, $info) {
  $type = $info['type'];
  $path = path_is_admin(current_path());
  if (!$path) {
    if ($type == 'column' || $type == 'pane') {
      $breakpoints = dd_panels_dd_flexible_style_get_breakpoints();
      foreach ($breakpoints as $size => $breakpoint) {
        if (!empty($settings[$size]['valign']) && ($size != 'small' || $settings[$size]['valign'] != 'none')) {
          $attributes['class'][] = "dd-valign";
          $attributes['data-valign-position'][] = $settings[$size]['valign'];
          $attributes['data-valign-mq'][] = $size;
          drupal_add_js(drupal_get_path('module', 'dd_flexible_style_valign') . '/dd_flexible_style_valign.js');
        }
      }
    }
  }
}
