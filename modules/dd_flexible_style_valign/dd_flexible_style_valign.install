<?php

/**
 * Convert valign old center value (1) to "center".
 */
function dd_flexible_style_valign_update_7001() {
  // Update row styles.
  $displays = db_select('panels_display')
    ->fields('panels_display')
    ->condition('layout', 'dd_flexible_layout')
    ->execute();
  $breakpoints = dd_panels_dd_flexible_style_get_breakpoints();
  foreach ($displays as $display) {
    $update = FALSE;
    $display = current(panels_load_displays(array($display->did)));

    foreach ($display->panel_settings['style_settings'] as &$settings) {
      if (empty($settings)) {
        continue;
      }
      foreach ($breakpoints as $size => $breakpoint) {
        if (isset($settings['valign'])) {
          switch ($settings['valign']) {
            case 0:
              $settings[$size]['valign'] = 'none';
              $update = TRUE;
              break;

            case 1:
              $settings[$size]['valign'] = 'center';
              $update = TRUE;
              break;
          }
        }
      }
      // Remove old valign settings.
      unset($settings['valign']);
    }

    if ($update) {
      panels_save_display($display);
    }
  }

// Update pane styles.
  $panes = db_select('panels_pane')
    ->fields('panels_pane')
    ->execute();

  foreach ($panes as $pane) {
    $update = FALSE;
    $pane = ctools_export_unpack_object('panels_pane', $pane);
    foreach ($pane->style as &$settings) {
      if (isset($settings['valign'])) {
        foreach ($breakpoints as $size => $breakpoint) {
          switch ($settings['valign']) {
            case 0:
              $settings[$size]['valign'] = 'none';
              $update = TRUE;
              break;

            case 1:
              $settings[$size]['valign'] = 'center';
              $update = TRUE;
              break;
          }
        }
        // Remove old valign settings.
        unset($settings['valign']);
      }
    }

    if ($update) {
      drupal_write_record('panels_pane', $pane, array('pid'));
    }
  }
}
